{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/v1/car-color/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModelColor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelColor"
                ],
                "summary": "Create a CarModelColor",
                "parameters": [
                    {
                        "description": "Create a CarModelColor",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelColorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModelColor response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelColorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-color/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModelColor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelColor"
                ],
                "summary": "Get a CarModelColor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelColor response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-color/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModelColor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelColor"
                ],
                "summary": "Get CarModelColor",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-color/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModelColor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelColor"
                ],
                "summary": "Delete a CarModelColor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-color/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModelColor",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelColor"
                ],
                "summary": "Update a CarModelColor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModelColor",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelColorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelColor response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelColorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-file/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModelFile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelFile"
                ],
                "summary": "Create a CarModelFile",
                "parameters": [
                    {
                        "description": "Create a CarModelFile",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelFileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModelFile response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelFileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-file/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModelFile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelFile"
                ],
                "summary": "Get a CarModelFile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelFile response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-file/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModelFile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelFile"
                ],
                "summary": "Get CarModelFile",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-file/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModelFile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelFile"
                ],
                "summary": "Delete a CarModelFile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-file/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModelFile",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelFile"
                ],
                "summary": "Update a CarModelFile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModelFile",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelFile response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelFileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-model/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModel"
                ],
                "summary": "Create a CarModel",
                "parameters": [
                    {
                        "description": "Create a CarModel",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModel response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-model/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModel"
                ],
                "summary": "Get a CarModel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModel response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-model/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModel"
                ],
                "summary": "Get CarModel",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-model/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModel"
                ],
                "summary": "Delete a CarModel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-model/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModel"
                ],
                "summary": "Update a CarModel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModel",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModel response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-price/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModelPrice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelPrice"
                ],
                "summary": "Create a CarModelPrice",
                "parameters": [
                    {
                        "description": "Create a CarModelPrice",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModelPrice response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelPriceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-price/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModelPrice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelPrice"
                ],
                "summary": "Get a CarModelPrice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelPrice response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-price/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModelPrice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelPrice"
                ],
                "summary": "Get CarModelPrice",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-price/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModelPrice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelPrice"
                ],
                "summary": "Delete a CarModelPrice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-price/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModelPrice",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelPrice"
                ],
                "summary": "Update a CarModelPrice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModelPrice",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelPrice response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelPriceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-property/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModelProperty",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelProperty"
                ],
                "summary": "Create a CarModelProperty",
                "parameters": [
                    {
                        "description": "Create a CarModelProperty",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelPropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModelProperty response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelPropertyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-property/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModelProperty",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelProperty"
                ],
                "summary": "Get a CarModelProperty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelProperty response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-property/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModelProperty",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelProperty"
                ],
                "summary": "Get CarModelProperty",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-property/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModelProperty",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelProperty"
                ],
                "summary": "Delete a CarModelProperty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-property/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModelProperty",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelProperty"
                ],
                "summary": "Update a CarModelProperty",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModelProperty",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelPropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelProperty response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelPropertyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-type/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Create a Company",
                "parameters": [
                    {
                        "description": "Create a Company",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CompanyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-type/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarType"
                ],
                "summary": "Get a CarType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarType response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-type/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarType"
                ],
                "summary": "Get CarType",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-type/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarType"
                ],
                "summary": "Delete a CarType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-type/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarType"
                ],
                "summary": "Update a CarType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarType",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarType response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarTypeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-year/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a CarModelYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelYear"
                ],
                "summary": "Create a CarModelYear",
                "parameters": [
                    {
                        "description": "Create a CarModelYear",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCarModelYearRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CarModelYear response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelYearResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-year/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a CarModelYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelYear"
                ],
                "summary": "Get a CarModelYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelYear response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-year/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get CarModelYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelYear"
                ],
                "summary": "Get CarModelYear",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-year/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a CarModelYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelYear"
                ],
                "summary": "Delete a CarModelYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/car-year/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a CarModelYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CarModelYear"
                ],
                "summary": "Update a CarModelYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a CarModelYear",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCarModelYearRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CarModelYear response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CarModelYearResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/cities/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a City",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get a City",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/cities/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Cities",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Get Cities",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/city/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a City",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Create a City",
                "parameters": [
                    {
                        "description": "Create a City",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "City response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CityResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/city/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a City",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Delete a City",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/city/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a City",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cities"
                ],
                "summary": "Update a City",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a City",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CityResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/color/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "summary": "Create a Color",
                "parameters": [
                    {
                        "description": "Create a Color",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateColorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Color response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.ColorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/color/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "summary": "Get a Color",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/color/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "summary": "Get Color",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/color/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "summary": "Delete a Color",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/color/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Color",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Color"
                ],
                "summary": "Update a Color",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a Color",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateColorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.ColorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/company/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get a Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/company/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "company response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/company/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a Company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Delete a Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/company/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update a Company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a Company",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.CompanyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/country/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a Country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Create a Country",
                "parameters": [
                    {
                        "description": "Create a Country",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUpdateCountryDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Country response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/country/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a Country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Delete a Country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Country response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/country/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "GetCountryByFilter",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "GetCountryByFilter",
                "parameters": [
                    {
                        "description": "GetCountryByFilter",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/country/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a Country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get a Country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/country/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a Country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Update a Country",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create a Country",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUpdateCountryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/files/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create File",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Create File",
                "parameters": [
                    {
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "CreateFile",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateFile response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/files/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete File",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Delete File",
                "responses": {
                    "200": {
                        "description": "DeleteFile response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/files/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get File",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get File",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetFile response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/files/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update File",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Update File",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateFile",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UpdateFile response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/gearbox/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a GearBox",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GearBox"
                ],
                "summary": "Create a GearBox",
                "parameters": [
                    {
                        "description": "Create a GearBox",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGearBoxRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GearBox response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.GearBoxResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/gearbox/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a GearBox",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GearBox"
                ],
                "summary": "Get a GearBox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GearBox response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/gearbox/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get GearBox",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GearBox"
                ],
                "summary": "Get GearBox",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "gearbox response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/gearbox/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a GearBox",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GearBox"
                ],
                "summary": "Delete a GearBox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/gearbox/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a GearBox",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "GearBox"
                ],
                "summary": "Update a GearBox",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a GearBox",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateGearBoxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GearBox response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.GearBoxResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/health/": {
            "get": {
                "description": "Health Check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property-category/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create Property Category",
                "parameters": [
                    {
                        "description": "Create Property Category",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePropertyCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property-category/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a property-category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a property-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "property-category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property-category/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Property By Filter",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Property Filter",
                "parameters": [
                    {
                        "description": "Get property-category By Filter",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property-category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property-category/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Property Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property-category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property-category/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update Property Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update a property-category",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePropertyCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property-category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create Property Category",
                "parameters": [
                    {
                        "description": "Create Property Category",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a property",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a property",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "property response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Property By Filter",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Property Filter",
                "parameters": [
                    {
                        "description": "Get property By Filter",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get Property Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/property/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update Property Category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Update Property Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update a property",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePropertyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "property response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/test/user/{id}": {
            "get": {
                "description": "Get user br ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user br ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/test/users": {
            "get": {
                "description": "Get s ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Gs",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/login-by-username": {
            "post": {
                "description": "LoginByUsername",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "LoginByUsername",
                "parameters": [
                    {
                        "description": "LoginByUsername",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginByUsername"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/register-by-username": {
            "post": {
                "description": "sRegisterByUsername",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "RegisterByUsername",
                "parameters": [
                    {
                        "description": "RegisterUserByUsername",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUserByUsername"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/register-login-by-phone": {
            "post": {
                "description": "RegisterLoginByPhone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "RegisterLoginByPhone",
                "parameters": [
                    {
                        "description": "RegisterLoginByPhone",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterLoginByPhone"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/users/send-otp": {
            "post": {
                "description": "send otp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "send otp",
                "parameters": [
                    {
                        "description": "GetOtpRequest",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GetOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "409": {
                        "description": "Failed",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/year/create": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Create a PersianYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PersianYear"
                ],
                "summary": "Create a PersianYear",
                "parameters": [
                    {
                        "description": "Create a PersianYear",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePersianYearRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PersianYear response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.PersianYearResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/year/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get a PersianYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PersianYear"
                ],
                "summary": "Get a PersianYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PersianYear response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/year/filter": {
            "post": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Get PersianYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PersianYear"
                ],
                "summary": "Get PersianYear",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PaginationInputWithFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/year/get/{id}": {
            "get": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Delete a PersianYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PersianYear"
                ],
                "summary": "Delete a PersianYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        },
        "/v1/year/update/{id}": {
            "put": {
                "security": [
                    {
                        "AuthBearer": []
                    }
                ],
                "description": "Update a PersianYear",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "PersianYear"
                ],
                "summary": "Update a PersianYear",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a PersianYear",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdatePersianYearRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PersianYear response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helper.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/dto.PersianYearResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helper.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CarModelColorResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "$ref": "#/definitions/dto.ColorResponse"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.CarModelFileResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/dto.FileResponse"
                },
                "id": {
                    "type": "integer"
                },
                "isMainImage": {
                    "type": "boolean"
                }
            }
        },
        "dto.CarModelPriceResponse": {
            "type": "object",
            "properties": {
                "carModelYearId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "priceAt": {
                    "type": "string"
                }
            }
        },
        "dto.CarModelPropertyResponse": {
            "type": "object",
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "property": {
                    "$ref": "#/definitions/dto.PropertyResponse"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.CarModelResponse": {
            "type": "object",
            "properties": {
                "carModelColors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CarModelColorResponse"
                    }
                },
                "carModelFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CarModelFileResponse"
                    }
                },
                "carModelYears": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CarModelYearResponse"
                    }
                },
                "carType": {
                    "$ref": "#/definitions/dto.CarTypeResponse"
                },
                "company": {
                    "$ref": "#/definitions/dto.CompanyResponse"
                },
                "gearbox": {
                    "$ref": "#/definitions/dto.GearBoxResponse"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CarModelYearResponse": {
            "type": "object",
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "carModelPrice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CarModelPriceResponse"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "persianYear": {
                    "$ref": "#/definitions/dto.PersianYearResponse"
                }
            }
        },
        "dto.CarTypeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CityResponse": {
            "type": "object",
            "properties": {
                "country": {
                    "$ref": "#/definitions/dto.CountryResponse"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ColorResponse": {
            "type": "object",
            "properties": {
                "hex": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CompanyResponse": {
            "type": "object",
            "properties": {
                "country": {
                    "$ref": "#/definitions/dto.CountryResponse"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CountryResponse": {
            "type": "object",
            "properties": {
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CityResponse"
                    }
                },
                "companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CompanyResponse"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCarModelColorRequest": {
            "type": "object",
            "required": [
                "carModelId",
                "colorId"
            ],
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "colorId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCarModelFileRequest": {
            "type": "object",
            "required": [
                "carModelId",
                "fileId"
            ],
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "fileId": {
                    "type": "integer"
                },
                "isMainImage": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateCarModelPriceRequest": {
            "type": "object",
            "required": [
                "carModelYearId"
            ],
            "properties": {
                "carModelYearId": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "priceAt": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCarModelPropertyRequest": {
            "type": "object",
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "propertyId": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCarModelRequest": {
            "type": "object",
            "required": [
                "carTypeId",
                "companyId",
                "gearboxId",
                "name"
            ],
            "properties": {
                "carTypeId": {
                    "type": "integer"
                },
                "companyId": {
                    "type": "integer"
                },
                "gearboxId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "dto.CreateCarModelYearRequest": {
            "type": "object",
            "required": [
                "carModelId",
                "persianYearId"
            ],
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "persianYearId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCarTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.CreateCityRequest": {
            "type": "object",
            "required": [
                "countryId",
                "name"
            ],
            "properties": {
                "countryId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "dto.CreateColorRequest": {
            "type": "object",
            "required": [
                "hex",
                "name"
            ],
            "properties": {
                "hex": {
                    "type": "string",
                    "maxLength": 7,
                    "minLength": 2
                },
                "name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 2
                }
            }
        },
        "dto.CreateCompanyRequest": {
            "type": "object",
            "required": [
                "countryId"
            ],
            "properties": {
                "countryId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "dto.CreateGearBoxRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.CreatePersianYearRequest": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string"
                },
                "persianTitle": {
                    "type": "string",
                    "minLength": 4
                },
                "startAt": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dto.CreatePropertyCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "icon": {
                    "type": "string",
                    "maxLength": 250,
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                }
            }
        },
        "dto.CreatePropertyRequest": {
            "type": "object",
            "required": [
                "categoryId",
                "name"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "maxLength": 15
                },
                "description": {
                    "type": "string",
                    "maxLength": 550
                },
                "icon": {
                    "type": "string",
                    "maxLength": 250
                },
                "name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 3
                },
                "unit": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "dto.CreateUpdateCountryDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3
                }
            }
        },
        "dto.FileResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "directory": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mine_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.Filter": {
            "type": "object",
            "properties": {
                "filter_type": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GearBoxResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.GetOtpRequest": {
            "type": "object",
            "required": [
                "mobile_number"
            ],
            "properties": {
                "mobile_number": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11
                }
            }
        },
        "dto.LoginByUsername": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "dto.PaginationInputWithFilter": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.Filter"
                    }
                },
                "page_number": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SortDTO"
                    }
                }
            }
        },
        "dto.PersianYearResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "persianTitle": {
                    "type": "string",
                    "minLength": 4
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dto.PropertyCategoryResponse": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PropertyResponse"
                    }
                }
            }
        },
        "dto.PropertyResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/dto.PropertyCategoryResponse"
                },
                "data_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterLoginByPhone": {
            "type": "object",
            "required": [
                "otp",
                "phone"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11
                }
            }
        },
        "dto.RegisterUserByUsername": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.SortDTO": {
            "type": "object",
            "properties": {
                "col_id": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCarModelColorRequest": {
            "type": "object",
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "colorId": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateCarModelFileRequest": {
            "type": "object",
            "properties": {
                "isMainImage": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateCarModelPriceRequest": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                },
                "priceAt": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCarModelPropertyRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCarModelRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "carTypeId": {
                    "type": "integer"
                },
                "companyId": {
                    "type": "integer"
                },
                "gearboxId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "dto.UpdateCarModelYearRequest": {
            "type": "object",
            "properties": {
                "carModelId": {
                    "type": "integer"
                },
                "persianYearId": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateCarTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.UpdateCityRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "dto.UpdateColorRequest": {
            "type": "object",
            "properties": {
                "hex": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "countryId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateFileRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateGearBoxRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.UpdatePersianYearRequest": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string"
                },
                "persianTitle": {
                    "type": "string",
                    "minLength": 4
                },
                "startAt": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdatePropertyCategoryRequest": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdatePropertyRequest": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "data_type": {
                    "type": "string",
                    "maxLength": 15
                },
                "description": {
                    "type": "string",
                    "maxLength": 550
                },
                "icon": {
                    "type": "string",
                    "maxLength": 250
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string",
                    "maxLength": 15
                }
            }
        },
        "helper.Response": {
            "type": "object",
            "properties": {
                "error": {},
                "result": {},
                "result_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "validation_error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/validators.ValidationError"
                    }
                }
            }
        },
        "validators.ValidationError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}