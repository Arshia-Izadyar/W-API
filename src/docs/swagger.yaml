definitions:
  dto.CityResponse:
    properties:
      country:
        $ref: '#/definitions/dto.CountryResponse'
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CountryResponse:
    properties:
      cities:
        items:
          $ref: '#/definitions/dto.CityResponse'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CreateCityRequest:
    properties:
      countryId:
        type: integer
      name:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - countryId
    - name
    type: object
  dto.CreateUpdateCountryDTO:
    properties:
      name:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - name
    type: object
  dto.Filter:
    properties:
      filter_type:
        type: string
      from:
        type: string
      to:
        type: string
      type:
        type: string
    type: object
  dto.GetOtpRequest:
    properties:
      mobile_number:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - mobile_number
    type: object
  dto.LoginByUsername:
    properties:
      password:
        minLength: 3
        type: string
      username:
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.PaginationInputWithFilter:
    properties:
      filter:
        additionalProperties:
          $ref: '#/definitions/dto.Filter'
        type: object
      page_number:
        type: integer
      page_size:
        type: integer
      sort:
        items:
          $ref: '#/definitions/dto.SortDTO'
        type: array
    type: object
  dto.RegisterLoginByPhone:
    properties:
      otp:
        type: string
      phone:
        maxLength: 11
        minLength: 11
        type: string
    required:
    - otp
    - phone
    type: object
  dto.RegisterUserByUsername:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.SortDTO:
    properties:
      col_id:
        type: string
      sort:
        type: string
    type: object
  dto.UpdateCityRequest:
    properties:
      name:
        maxLength: 20
        minLength: 3
        type: string
    type: object
  helper.Response:
    properties:
      error: {}
      result: {}
      result_code:
        type: integer
      success:
        type: boolean
      validation_error:
        items:
          $ref: '#/definitions/validators.ValidationError'
        type: array
    type: object
  validators.ValidationError:
    properties:
      message:
        type: string
      property:
        type: string
      tag:
        type: string
      value:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/health/:
    get:
      consumes:
      - application/json
      description: Health Check
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Health Check
      tags:
      - health
  /api/v1/test/user/{id}:
    get:
      consumes:
      - application/json
      description: Get user br ID
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get user br ID
      tags:
      - User
  /api/v1/test/users:
    get:
      consumes:
      - application/json
      description: Get s ID
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Gs
      tags:
      - User
  /v1/cities/delete/{id}:
    get:
      consumes:
      - application/json
      description: Get a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: City response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Get a City
      tags:
      - Cities
  /v1/cities/filter:
    post:
      consumes:
      - application/json
      description: Get Cities
      parameters:
      - description: Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.PaginationInputWithFilter'
      responses:
        "200":
          description: City response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Get Cities
      tags:
      - Cities
  /v1/city/create:
    post:
      consumes:
      - application/json
      description: Create a City
      parameters:
      - description: Create a City
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCityRequest'
      responses:
        "201":
          description: City response
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                result:
                  $ref: '#/definitions/dto.CityResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Create a City
      tags:
      - Cities
  /v1/city/get/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Delete a City
      tags:
      - Cities
  /v1/city/update/{id}:
    put:
      consumes:
      - application/json
      description: Update a City
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a City
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCityRequest'
      responses:
        "200":
          description: City response
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                result:
                  $ref: '#/definitions/dto.CityResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Update a City
      tags:
      - Cities
  /v1/country/create:
    post:
      consumes:
      - application/json
      description: Create a Country
      parameters:
      - description: Create a Country
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUpdateCountryDTO'
      responses:
        "201":
          description: Country response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Create a Country
      tags:
      - Countries
  /v1/country/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Country
      responses:
        "204":
          description: Country response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Delete a Country
      tags:
      - Countries
  /v1/country/get-by-filter:
    post:
      consumes:
      - application/json
      description: GetCountryByFilter
      parameters:
      - description: GetCountryByFilter
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.PaginationInputWithFilter'
      responses:
        "200":
          description: Country response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: GetCountryByFilter
      tags:
      - Countries
  /v1/country/get/{id}:
    get:
      consumes:
      - application/json
      description: Get a Country
      responses:
        "200":
          description: Country response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Get a Country
      tags:
      - Countries
  /v1/country/update/{id}:
    put:
      consumes:
      - application/json
      description: Update a Country
      parameters:
      - description: Create a Country
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUpdateCountryDTO'
      responses:
        "200":
          description: Country response
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/helper.Response'
      security:
      - AuthBearer: []
      summary: Update a Country
      tags:
      - Countries
  /v1/users/login-by-username:
    post:
      consumes:
      - application/json
      description: LoginByUsername
      parameters:
      - description: LoginByUsername
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginByUsername'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: LoginByUsername
      tags:
      - User
  /v1/users/register-by-username:
    post:
      consumes:
      - application/json
      description: sRegisterByUsername
      parameters:
      - description: RegisterUserByUsername
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterUserByUsername'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: RegisterByUsername
      tags:
      - User
  /v1/users/register-login-by-phone:
    post:
      consumes:
      - application/json
      description: RegisterLoginByPhone
      parameters:
      - description: RegisterLoginByPhone
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterLoginByPhone'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: RegisterLoginByPhone
      tags:
      - User
  /v1/users/send-otp:
    post:
      consumes:
      - application/json
      description: send otp
      parameters:
      - description: GetOtpRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/dto.GetOtpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/helper.Response'
      summary: send otp
      tags:
      - User
swagger: "2.0"
